/*****************************************************************************
 * Project: RooFit                                                           *
 *                                                                           *
  * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/

//#ifndef HZZ4L_ROOHIGHMASS
//#define HZZ4L_ROOHIGHMASS

#include "RooAbsPdf.h"
#include "RooSetProxy.h"
#include "RooRealProxy.h"
#include "RooRealVar.h"
#include "RooCategoryProxy.h"
#include "RooAbsReal.h"
#include "RooAbsCategory.h"
#include "TH3F.h"
#include "TH1.h"
#include "RooDataHist.h"
#include "RooHistFunc.h"
using namespace RooFit;

class RooHighmass_conv : public RooAbsPdf {
protected:

 RooRealProxy xreco;
 //RooRealProxy xgen;
  RooListProxy _coefList ;  //  List of funcficients
  TIterator* _coefIter ;    //! Iterator over funcficient lis 	
//	RooRealVar *xgencopy;
	double xgen_min;
	double xgen_max;
  Double_t evaluate() const ;
public:
  RooHighmass_conv() {} ; 
  RooHighmass_conv(const char *name, const char *title,
		       RooAbsReal& _xreco,
//		       RooAbsReal& _xgen,
			const RooArgList& inCoefList);
		    
  RooHighmass_conv(const RooHighmass_conv& other, const char* name=0) ;
  virtual TObject* clone(const char* newname) const { return new RooHighmass_conv(*this,newname); }
  inline virtual ~RooHighmass_conv() {}
  
  Int_t getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName=0) const ;
  Double_t analyticalIntegral(Int_t code, const char* rangeName=0) const ;

private:

  ClassDef(RooHighmass_conv,1) // Your description goes here...
};
 
//#endif
